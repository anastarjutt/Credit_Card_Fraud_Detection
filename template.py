import os,sys
import pandas as pd
import numpy as np

class config:
    n_split = 5
    random_seed = 42

    def __init__(self) -> None:

        self.base_dir = os.getcwd()
        self.folders = {
            'models':os.path.join(self.base_dir,'models'),
            'voting':os.path.join(self.base_dir,'models','voting'),
            'optuna':os.path.join(self.base_dir,'models','optuna'),
            'fold':os.path.join(self.base_dir,'models','fold'),
            'cat':os.path.join(self.base_dir,'models','cat'),
            'xgb':os.path.join(self.base_dir,'models','xgb'),
            'notebooks':os.path.join(self.base_dir,'notebooks'),
            'reports':os.path.join(self.base_dir,'reports'),
            'data':os.path.join(self.base_dir,'data'),
            'logs':os.path.join(self.base_dir,'logs'),
            'src':os.path.join(self.base_dir,'src')
        }
        
        for path in self.folders.values():
            os.makedirs(path,exist_ok=True)
        
        self.files_to_generate = {
            'base':['README.md','.gitignore','requirements.txt','main.py','logger.py'],
            'src':['__init__.py','config.py','data_preprocessing.py','model_training.py','logger.py'],
            'voting':['__init__.py'],
            'models':['__init__.py'],
            'optuna':['__init__.py'],
            'xgb':['__init__.py'],
            'cat':['__init__.py'],
            'notebooks':['01_eda.ipynb','__init__.py'],
            'reports':['__init__.py'],
            'logs':['__init__.py']
        }
        for f_name,files in self.files_to_generate.items():
            folder_path = self.base_dir if f_name == 'base' else self.folders[f_name]
            for file in files:
                path = os.path.join(folder_path,file)
                if not os.path.exists(path):
                    with open(path,'w') as f:
                        if file == '__init__.py':
                            f.write('# Auto Generate init file\n')
                        elif file.endswith('.py'):
                            f.write(f'# AutoGenerated : {file}\n\n')
                            f.write("def main():\n    pass\n\nif __name__ == '__main__':\n    main()\n")
                        elif file.endswith('.ipynb'):
                            f.write('')
                    print(f"Generated file: {path}")
                else:
                    print(f'[ ] Skipped Already Exsists: {path}')

if __name__ == '__main__':
    conf = config()
    print('[ðŸŽ¯] Project structure created successfully.')

